# Super cell is read from a file such as POSCAR, xyz, lammps-data
# or any format that ASE supports
supercell: 
    file: init_Al.xyz
    format: extxyz
    replicate: [1, 1, 1]                                                        # supercell creation. Be mindful of DFT limitations and periodicity of your cell.
    jitter: 0.1                                                                 # perturb the initial atomic positions by 0.1 A, so initial atomic environments added to the sparse set are not the same

# Set up FLARE calculator with (sparse) Gaussian process
flare_calc:
    gp: SGP_Wrapper
    kernels:
        - name: NormalizedDotProduct                                            # select kernel for comparison of atomic environments
          sigma: 2.0                                                            # signal variance, this hyperparameter will be trained, and is typically between 1 and 10.
          power: 2                                                              # power of the kernel, influences body-order
    descriptors:
        - name: B2                                                              # Atomic Cluster Expansion (ACE) descriptor from R. Drautz (2019). FLARE can only go from B1 up to B3 currently.
          nmax: 8                                                               # Radial fidelity of the descriptor (higher value = higher cost)
          lmax: 3                                                               # Angular fidelity of the descriptor (higher value = higher cost)
          cutoff_function: quadratic                                            # Cutoff behavior
          radial_basis: chebyshev                                               # Formalism for the radial basis functions
          cutoff_matrix: [[5.0]]                                                # In angstroms. NxN array for N_species in a system.
    energy_noise: 0.096                                                         # Energy noise hyperparameter, will be trained later. Typically set to 1 meV * N_atoms.
    forces_noise: 0.05                                                          # Force noise hyperparameter, will be trained later. System dependent, typically between 0.05 meV/A and 0.2 meV/A.
    stress_noise: 0.001                                                         # Stress noise hyperparameter, will be trained later. Typically set to 0.001 meV/A^3.
    energy_training: True
    force_training: True
    stress_training: True
    species:
        - 13                                                                    # Atomic number of your species (here, 13 = Al).
    single_atom_energies:
        - 0                                                                     # Single atom energies to bias the energy prediction of the model. Can help in systems with poor initial energy estimations. Length must equal the number of species.
    cutoff: 5.0                                                                 # Cutoff for the (ACE) descriptor. Typically informed by the radial distribution function of the system. Should equal the maximum value in the cutoff_matrix.
    variance_type: local                                                        # Calculate atomic uncertainties.
    max_iterations: 20                                                          # Maximum steps taken during each hyperparameter optimization call.
    use_mapping: True                                                           # Print mapped model (ready for use in LAMMPS) during trajectory. Model is re-mapped and replaced if new DFT calls are made throughout the trajectory.

# In the tutorial, we use ASE Lennard-Jones potential as ground truth
# instead of DFT to save time
dft_calc:
    name: LennardJones
    kwargs: {}

# Set up On-the-fly training and MD
otf: # On-the-fly training and MD
    mode: fresh                                                                 # Start from an empty SGP
    md_engine: VelocityVerlet                                                   # Define MD engine, here we use the Velocity Verlet engine from ASE. LAMMPS examples can be found in the `flare/examples` directory in the repo
    md_kwargs: {}                                                               # Define MD kwargs
    initial_velocity: 1000                                                      # Initialize the velocities
    dt: 0.001                                                                   # Set the time step in picoseconds (1 fs here)
    number_of_steps: 10                                                         # Total number of MD steps to be taken
    output_name: Al_otf                                                            # Name of output
    init_atoms: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]                          # Initial atoms to be added to the sparse set
    std_tolerance_factor: -0.01                                                 # The uncertainty threshold above which the DFT will be called
    max_atoms_added: -1                                                         # Allow for all atoms in a given frame to be added to the sparse set if uncertainties permit
    train_hyps: [5,inf]                                                         # Define range in which hyperparameters will be optimized. Here, hyps are optimized at every DFT call after the 5th call.
    write_model: 4                                                              # Verbosity of model output.
    update_style: threshold                                                     # Sparse set update style. Atoms above a defined "threshold" will be added using this method
    update_threshold: 0.001                                                     # Threshold for adding atoms if "update_style = threshold". Threshold represents relative uncertainty to mean atomic uncertainty, where atoms above are added to sparse set
    force_only: False                                                           # Train on forces, stresses, and energies.
